// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: package_service.proto
#region Designer generated code

using System;
using System.Threading;
using System.Threading.Tasks;
using Grpc.Core;

namespace ChocolateyGui.Rpc {
  public static class PackageService
  {
    static readonly string __ServiceName = "chocolateygui.rpc.PackageService";

    static readonly Marshaller<global::ChocolateyGui.Rpc.Empty> __Marshaller_Empty = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ChocolateyGui.Rpc.Empty.Parser.ParseFrom);
    static readonly Marshaller<global::ChocolateyGui.Rpc.IsElevatedResult> __Marshaller_IsElevatedResult = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ChocolateyGui.Rpc.IsElevatedResult.Parser.ParseFrom);
    static readonly Marshaller<global::ChocolateyGui.Rpc.PackagesList> __Marshaller_PackagesList = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ChocolateyGui.Rpc.PackagesList.Parser.ParseFrom);
    static readonly Marshaller<global::ChocolateyGui.Rpc.OutdatedArgs> __Marshaller_OutdatedArgs = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ChocolateyGui.Rpc.OutdatedArgs.Parser.ParseFrom);
    static readonly Marshaller<global::ChocolateyGui.Rpc.OutdatedResult> __Marshaller_OutdatedResult = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ChocolateyGui.Rpc.OutdatedResult.Parser.ParseFrom);
    static readonly Marshaller<global::ChocolateyGui.Rpc.PackageSearchArgs> __Marshaller_PackageSearchArgs = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ChocolateyGui.Rpc.PackageSearchArgs.Parser.ParseFrom);
    static readonly Marshaller<global::ChocolateyGui.Rpc.PackageSearchReply> __Marshaller_PackageSearchReply = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ChocolateyGui.Rpc.PackageSearchReply.Parser.ParseFrom);
    static readonly Marshaller<global::ChocolateyGui.Rpc.GetPackageArgs> __Marshaller_GetPackageArgs = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ChocolateyGui.Rpc.GetPackageArgs.Parser.ParseFrom);
    static readonly Marshaller<global::ChocolateyGui.Rpc.Package> __Marshaller_Package = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ChocolateyGui.Rpc.Package.Parser.ParseFrom);
    static readonly Marshaller<global::ChocolateyGui.Rpc.InstallPackageArgs> __Marshaller_InstallPackageArgs = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ChocolateyGui.Rpc.InstallPackageArgs.Parser.ParseFrom);
    static readonly Marshaller<global::ChocolateyGui.Rpc.PackageOperationResult> __Marshaller_PackageOperationResult = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ChocolateyGui.Rpc.PackageOperationResult.Parser.ParseFrom);
    static readonly Marshaller<global::ChocolateyGui.Rpc.UninstallPackageArgs> __Marshaller_UninstallPackageArgs = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ChocolateyGui.Rpc.UninstallPackageArgs.Parser.ParseFrom);
    static readonly Marshaller<global::ChocolateyGui.Rpc.UpdatePackageArgs> __Marshaller_UpdatePackageArgs = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ChocolateyGui.Rpc.UpdatePackageArgs.Parser.ParseFrom);
    static readonly Marshaller<global::ChocolateyGui.Rpc.PinPackageArgs> __Marshaller_PinPackageArgs = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ChocolateyGui.Rpc.PinPackageArgs.Parser.ParseFrom);
    static readonly Marshaller<global::ChocolateyGui.Rpc.ChocolateyFeature> __Marshaller_ChocolateyFeature = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ChocolateyGui.Rpc.ChocolateyFeature.Parser.ParseFrom);
    static readonly Marshaller<global::ChocolateyGui.Rpc.ChocolateySetting> __Marshaller_ChocolateySetting = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ChocolateyGui.Rpc.ChocolateySetting.Parser.ParseFrom);
    static readonly Marshaller<global::ChocolateyGui.Rpc.ChocolateySource> __Marshaller_ChocolateySource = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ChocolateyGui.Rpc.ChocolateySource.Parser.ParseFrom);
    static readonly Marshaller<global::ChocolateyGui.Rpc.UpdateSourceArgs> __Marshaller_UpdateSourceArgs = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ChocolateyGui.Rpc.UpdateSourceArgs.Parser.ParseFrom);
    static readonly Marshaller<global::ChocolateyGui.Rpc.RemoveSourceArgs> __Marshaller_RemoveSourceArgs = Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::ChocolateyGui.Rpc.RemoveSourceArgs.Parser.ParseFrom);

    static readonly Method<global::ChocolateyGui.Rpc.Empty, global::ChocolateyGui.Rpc.IsElevatedResult> __Method_IsElevated = new Method<global::ChocolateyGui.Rpc.Empty, global::ChocolateyGui.Rpc.IsElevatedResult>(
        MethodType.Unary,
        __ServiceName,
        "IsElevated",
        __Marshaller_Empty,
        __Marshaller_IsElevatedResult);

    static readonly Method<global::ChocolateyGui.Rpc.Empty, global::ChocolateyGui.Rpc.PackagesList> __Method_GetInstalledPackages = new Method<global::ChocolateyGui.Rpc.Empty, global::ChocolateyGui.Rpc.PackagesList>(
        MethodType.Unary,
        __ServiceName,
        "GetInstalledPackages",
        __Marshaller_Empty,
        __Marshaller_PackagesList);

    static readonly Method<global::ChocolateyGui.Rpc.OutdatedArgs, global::ChocolateyGui.Rpc.OutdatedResult> __Method_GetOutdatedPackages = new Method<global::ChocolateyGui.Rpc.OutdatedArgs, global::ChocolateyGui.Rpc.OutdatedResult>(
        MethodType.ServerStreaming,
        __ServiceName,
        "GetOutdatedPackages",
        __Marshaller_OutdatedArgs,
        __Marshaller_OutdatedResult);

    static readonly Method<global::ChocolateyGui.Rpc.PackageSearchArgs, global::ChocolateyGui.Rpc.PackageSearchReply> __Method_Search = new Method<global::ChocolateyGui.Rpc.PackageSearchArgs, global::ChocolateyGui.Rpc.PackageSearchReply>(
        MethodType.Unary,
        __ServiceName,
        "Search",
        __Marshaller_PackageSearchArgs,
        __Marshaller_PackageSearchReply);

    static readonly Method<global::ChocolateyGui.Rpc.GetPackageArgs, global::ChocolateyGui.Rpc.Package> __Method_GetByVersionAndId = new Method<global::ChocolateyGui.Rpc.GetPackageArgs, global::ChocolateyGui.Rpc.Package>(
        MethodType.Unary,
        __ServiceName,
        "GetByVersionAndId",
        __Marshaller_GetPackageArgs,
        __Marshaller_Package);

    static readonly Method<global::ChocolateyGui.Rpc.InstallPackageArgs, global::ChocolateyGui.Rpc.PackageOperationResult> __Method_InstallPackage = new Method<global::ChocolateyGui.Rpc.InstallPackageArgs, global::ChocolateyGui.Rpc.PackageOperationResult>(
        MethodType.Unary,
        __ServiceName,
        "InstallPackage",
        __Marshaller_InstallPackageArgs,
        __Marshaller_PackageOperationResult);

    static readonly Method<global::ChocolateyGui.Rpc.UninstallPackageArgs, global::ChocolateyGui.Rpc.PackageOperationResult> __Method_UninstallPackage = new Method<global::ChocolateyGui.Rpc.UninstallPackageArgs, global::ChocolateyGui.Rpc.PackageOperationResult>(
        MethodType.Unary,
        __ServiceName,
        "UninstallPackage",
        __Marshaller_UninstallPackageArgs,
        __Marshaller_PackageOperationResult);

    static readonly Method<global::ChocolateyGui.Rpc.UpdatePackageArgs, global::ChocolateyGui.Rpc.PackageOperationResult> __Method_UpdatePackage = new Method<global::ChocolateyGui.Rpc.UpdatePackageArgs, global::ChocolateyGui.Rpc.PackageOperationResult>(
        MethodType.Unary,
        __ServiceName,
        "UpdatePackage",
        __Marshaller_UpdatePackageArgs,
        __Marshaller_PackageOperationResult);

    static readonly Method<global::ChocolateyGui.Rpc.PinPackageArgs, global::ChocolateyGui.Rpc.PackageOperationResult> __Method_PinPackage = new Method<global::ChocolateyGui.Rpc.PinPackageArgs, global::ChocolateyGui.Rpc.PackageOperationResult>(
        MethodType.Unary,
        __ServiceName,
        "PinPackage",
        __Marshaller_PinPackageArgs,
        __Marshaller_PackageOperationResult);

    static readonly Method<global::ChocolateyGui.Rpc.PinPackageArgs, global::ChocolateyGui.Rpc.PackageOperationResult> __Method_UnpinPackage = new Method<global::ChocolateyGui.Rpc.PinPackageArgs, global::ChocolateyGui.Rpc.PackageOperationResult>(
        MethodType.Unary,
        __ServiceName,
        "UnpinPackage",
        __Marshaller_PinPackageArgs,
        __Marshaller_PackageOperationResult);

    static readonly Method<global::ChocolateyGui.Rpc.Empty, global::ChocolateyGui.Rpc.ChocolateyFeature> __Method_GetFeatures = new Method<global::ChocolateyGui.Rpc.Empty, global::ChocolateyGui.Rpc.ChocolateyFeature>(
        MethodType.ServerStreaming,
        __ServiceName,
        "GetFeatures",
        __Marshaller_Empty,
        __Marshaller_ChocolateyFeature);

    static readonly Method<global::ChocolateyGui.Rpc.ChocolateyFeature, global::ChocolateyGui.Rpc.Empty> __Method_SetFeature = new Method<global::ChocolateyGui.Rpc.ChocolateyFeature, global::ChocolateyGui.Rpc.Empty>(
        MethodType.Unary,
        __ServiceName,
        "SetFeature",
        __Marshaller_ChocolateyFeature,
        __Marshaller_Empty);

    static readonly Method<global::ChocolateyGui.Rpc.Empty, global::ChocolateyGui.Rpc.ChocolateySetting> __Method_GetSettings = new Method<global::ChocolateyGui.Rpc.Empty, global::ChocolateyGui.Rpc.ChocolateySetting>(
        MethodType.ServerStreaming,
        __ServiceName,
        "GetSettings",
        __Marshaller_Empty,
        __Marshaller_ChocolateySetting);

    static readonly Method<global::ChocolateyGui.Rpc.ChocolateySetting, global::ChocolateyGui.Rpc.Empty> __Method_SetSetting = new Method<global::ChocolateyGui.Rpc.ChocolateySetting, global::ChocolateyGui.Rpc.Empty>(
        MethodType.Unary,
        __ServiceName,
        "SetSetting",
        __Marshaller_ChocolateySetting,
        __Marshaller_Empty);

    static readonly Method<global::ChocolateyGui.Rpc.Empty, global::ChocolateyGui.Rpc.ChocolateySource> __Method_GetSources = new Method<global::ChocolateyGui.Rpc.Empty, global::ChocolateyGui.Rpc.ChocolateySource>(
        MethodType.ServerStreaming,
        __ServiceName,
        "GetSources",
        __Marshaller_Empty,
        __Marshaller_ChocolateySource);

    static readonly Method<global::ChocolateyGui.Rpc.ChocolateySource, global::ChocolateyGui.Rpc.Empty> __Method_AddSource = new Method<global::ChocolateyGui.Rpc.ChocolateySource, global::ChocolateyGui.Rpc.Empty>(
        MethodType.Unary,
        __ServiceName,
        "AddSource",
        __Marshaller_ChocolateySource,
        __Marshaller_Empty);

    static readonly Method<global::ChocolateyGui.Rpc.UpdateSourceArgs, global::ChocolateyGui.Rpc.Empty> __Method_UpdateSource = new Method<global::ChocolateyGui.Rpc.UpdateSourceArgs, global::ChocolateyGui.Rpc.Empty>(
        MethodType.Unary,
        __ServiceName,
        "UpdateSource",
        __Marshaller_UpdateSourceArgs,
        __Marshaller_Empty);

    static readonly Method<global::ChocolateyGui.Rpc.RemoveSourceArgs, global::ChocolateyGui.Rpc.PackageOperationResult> __Method_RemoveSource = new Method<global::ChocolateyGui.Rpc.RemoveSourceArgs, global::ChocolateyGui.Rpc.PackageOperationResult>(
        MethodType.Unary,
        __ServiceName,
        "RemoveSource",
        __Marshaller_RemoveSourceArgs,
        __Marshaller_PackageOperationResult);

    static readonly Method<global::ChocolateyGui.Rpc.Empty, global::ChocolateyGui.Rpc.Empty> __Method_Exit = new Method<global::ChocolateyGui.Rpc.Empty, global::ChocolateyGui.Rpc.Empty>(
        MethodType.Unary,
        __ServiceName,
        "Exit",
        __Marshaller_Empty,
        __Marshaller_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::ChocolateyGui.Rpc.PackageServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of PackageService</summary>
    public abstract class PackageServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::ChocolateyGui.Rpc.IsElevatedResult> IsElevated(global::ChocolateyGui.Rpc.Empty request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ChocolateyGui.Rpc.PackagesList> GetInstalledPackages(global::ChocolateyGui.Rpc.Empty request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetOutdatedPackages(global::ChocolateyGui.Rpc.OutdatedArgs request, IServerStreamWriter<global::ChocolateyGui.Rpc.OutdatedResult> responseStream, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ChocolateyGui.Rpc.PackageSearchReply> Search(global::ChocolateyGui.Rpc.PackageSearchArgs request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ChocolateyGui.Rpc.Package> GetByVersionAndId(global::ChocolateyGui.Rpc.GetPackageArgs request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ChocolateyGui.Rpc.PackageOperationResult> InstallPackage(global::ChocolateyGui.Rpc.InstallPackageArgs request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ChocolateyGui.Rpc.PackageOperationResult> UninstallPackage(global::ChocolateyGui.Rpc.UninstallPackageArgs request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ChocolateyGui.Rpc.PackageOperationResult> UpdatePackage(global::ChocolateyGui.Rpc.UpdatePackageArgs request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ChocolateyGui.Rpc.PackageOperationResult> PinPackage(global::ChocolateyGui.Rpc.PinPackageArgs request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ChocolateyGui.Rpc.PackageOperationResult> UnpinPackage(global::ChocolateyGui.Rpc.PinPackageArgs request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetFeatures(global::ChocolateyGui.Rpc.Empty request, IServerStreamWriter<global::ChocolateyGui.Rpc.ChocolateyFeature> responseStream, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ChocolateyGui.Rpc.Empty> SetFeature(global::ChocolateyGui.Rpc.ChocolateyFeature request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetSettings(global::ChocolateyGui.Rpc.Empty request, IServerStreamWriter<global::ChocolateyGui.Rpc.ChocolateySetting> responseStream, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ChocolateyGui.Rpc.Empty> SetSetting(global::ChocolateyGui.Rpc.ChocolateySetting request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetSources(global::ChocolateyGui.Rpc.Empty request, IServerStreamWriter<global::ChocolateyGui.Rpc.ChocolateySource> responseStream, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ChocolateyGui.Rpc.Empty> AddSource(global::ChocolateyGui.Rpc.ChocolateySource request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ChocolateyGui.Rpc.Empty> UpdateSource(global::ChocolateyGui.Rpc.UpdateSourceArgs request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ChocolateyGui.Rpc.PackageOperationResult> RemoveSource(global::ChocolateyGui.Rpc.RemoveSourceArgs request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::ChocolateyGui.Rpc.Empty> Exit(global::ChocolateyGui.Rpc.Empty request, ServerCallContext context)
      {
        throw new RpcException(new Status(StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for PackageService</summary>
    public class PackageServiceClient : ClientBase<PackageServiceClient>
    {
      /// <summary>Creates a new client for PackageService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public PackageServiceClient(Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for PackageService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public PackageServiceClient(CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected PackageServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected PackageServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::ChocolateyGui.Rpc.IsElevatedResult IsElevated(global::ChocolateyGui.Rpc.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return IsElevated(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::ChocolateyGui.Rpc.IsElevatedResult IsElevated(global::ChocolateyGui.Rpc.Empty request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_IsElevated, null, options, request);
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.IsElevatedResult> IsElevatedAsync(global::ChocolateyGui.Rpc.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return IsElevatedAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.IsElevatedResult> IsElevatedAsync(global::ChocolateyGui.Rpc.Empty request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_IsElevated, null, options, request);
      }
      public virtual global::ChocolateyGui.Rpc.PackagesList GetInstalledPackages(global::ChocolateyGui.Rpc.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetInstalledPackages(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::ChocolateyGui.Rpc.PackagesList GetInstalledPackages(global::ChocolateyGui.Rpc.Empty request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetInstalledPackages, null, options, request);
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.PackagesList> GetInstalledPackagesAsync(global::ChocolateyGui.Rpc.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetInstalledPackagesAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.PackagesList> GetInstalledPackagesAsync(global::ChocolateyGui.Rpc.Empty request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetInstalledPackages, null, options, request);
      }
      public virtual AsyncServerStreamingCall<global::ChocolateyGui.Rpc.OutdatedResult> GetOutdatedPackages(global::ChocolateyGui.Rpc.OutdatedArgs request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetOutdatedPackages(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncServerStreamingCall<global::ChocolateyGui.Rpc.OutdatedResult> GetOutdatedPackages(global::ChocolateyGui.Rpc.OutdatedArgs request, CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetOutdatedPackages, null, options, request);
      }
      public virtual global::ChocolateyGui.Rpc.PackageSearchReply Search(global::ChocolateyGui.Rpc.PackageSearchArgs request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Search(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::ChocolateyGui.Rpc.PackageSearchReply Search(global::ChocolateyGui.Rpc.PackageSearchArgs request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Search, null, options, request);
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.PackageSearchReply> SearchAsync(global::ChocolateyGui.Rpc.PackageSearchArgs request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SearchAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.PackageSearchReply> SearchAsync(global::ChocolateyGui.Rpc.PackageSearchArgs request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Search, null, options, request);
      }
      public virtual global::ChocolateyGui.Rpc.Package GetByVersionAndId(global::ChocolateyGui.Rpc.GetPackageArgs request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetByVersionAndId(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::ChocolateyGui.Rpc.Package GetByVersionAndId(global::ChocolateyGui.Rpc.GetPackageArgs request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetByVersionAndId, null, options, request);
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.Package> GetByVersionAndIdAsync(global::ChocolateyGui.Rpc.GetPackageArgs request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetByVersionAndIdAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.Package> GetByVersionAndIdAsync(global::ChocolateyGui.Rpc.GetPackageArgs request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetByVersionAndId, null, options, request);
      }
      public virtual global::ChocolateyGui.Rpc.PackageOperationResult InstallPackage(global::ChocolateyGui.Rpc.InstallPackageArgs request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return InstallPackage(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::ChocolateyGui.Rpc.PackageOperationResult InstallPackage(global::ChocolateyGui.Rpc.InstallPackageArgs request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InstallPackage, null, options, request);
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.PackageOperationResult> InstallPackageAsync(global::ChocolateyGui.Rpc.InstallPackageArgs request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return InstallPackageAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.PackageOperationResult> InstallPackageAsync(global::ChocolateyGui.Rpc.InstallPackageArgs request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InstallPackage, null, options, request);
      }
      public virtual global::ChocolateyGui.Rpc.PackageOperationResult UninstallPackage(global::ChocolateyGui.Rpc.UninstallPackageArgs request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UninstallPackage(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::ChocolateyGui.Rpc.PackageOperationResult UninstallPackage(global::ChocolateyGui.Rpc.UninstallPackageArgs request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UninstallPackage, null, options, request);
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.PackageOperationResult> UninstallPackageAsync(global::ChocolateyGui.Rpc.UninstallPackageArgs request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UninstallPackageAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.PackageOperationResult> UninstallPackageAsync(global::ChocolateyGui.Rpc.UninstallPackageArgs request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UninstallPackage, null, options, request);
      }
      public virtual global::ChocolateyGui.Rpc.PackageOperationResult UpdatePackage(global::ChocolateyGui.Rpc.UpdatePackageArgs request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdatePackage(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::ChocolateyGui.Rpc.PackageOperationResult UpdatePackage(global::ChocolateyGui.Rpc.UpdatePackageArgs request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdatePackage, null, options, request);
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.PackageOperationResult> UpdatePackageAsync(global::ChocolateyGui.Rpc.UpdatePackageArgs request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdatePackageAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.PackageOperationResult> UpdatePackageAsync(global::ChocolateyGui.Rpc.UpdatePackageArgs request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdatePackage, null, options, request);
      }
      public virtual global::ChocolateyGui.Rpc.PackageOperationResult PinPackage(global::ChocolateyGui.Rpc.PinPackageArgs request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return PinPackage(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::ChocolateyGui.Rpc.PackageOperationResult PinPackage(global::ChocolateyGui.Rpc.PinPackageArgs request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PinPackage, null, options, request);
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.PackageOperationResult> PinPackageAsync(global::ChocolateyGui.Rpc.PinPackageArgs request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return PinPackageAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.PackageOperationResult> PinPackageAsync(global::ChocolateyGui.Rpc.PinPackageArgs request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PinPackage, null, options, request);
      }
      public virtual global::ChocolateyGui.Rpc.PackageOperationResult UnpinPackage(global::ChocolateyGui.Rpc.PinPackageArgs request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UnpinPackage(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::ChocolateyGui.Rpc.PackageOperationResult UnpinPackage(global::ChocolateyGui.Rpc.PinPackageArgs request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UnpinPackage, null, options, request);
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.PackageOperationResult> UnpinPackageAsync(global::ChocolateyGui.Rpc.PinPackageArgs request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UnpinPackageAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.PackageOperationResult> UnpinPackageAsync(global::ChocolateyGui.Rpc.PinPackageArgs request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UnpinPackage, null, options, request);
      }
      public virtual AsyncServerStreamingCall<global::ChocolateyGui.Rpc.ChocolateyFeature> GetFeatures(global::ChocolateyGui.Rpc.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetFeatures(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncServerStreamingCall<global::ChocolateyGui.Rpc.ChocolateyFeature> GetFeatures(global::ChocolateyGui.Rpc.Empty request, CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetFeatures, null, options, request);
      }
      public virtual global::ChocolateyGui.Rpc.Empty SetFeature(global::ChocolateyGui.Rpc.ChocolateyFeature request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SetFeature(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::ChocolateyGui.Rpc.Empty SetFeature(global::ChocolateyGui.Rpc.ChocolateyFeature request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetFeature, null, options, request);
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.Empty> SetFeatureAsync(global::ChocolateyGui.Rpc.ChocolateyFeature request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SetFeatureAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.Empty> SetFeatureAsync(global::ChocolateyGui.Rpc.ChocolateyFeature request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetFeature, null, options, request);
      }
      public virtual AsyncServerStreamingCall<global::ChocolateyGui.Rpc.ChocolateySetting> GetSettings(global::ChocolateyGui.Rpc.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetSettings(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncServerStreamingCall<global::ChocolateyGui.Rpc.ChocolateySetting> GetSettings(global::ChocolateyGui.Rpc.Empty request, CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetSettings, null, options, request);
      }
      public virtual global::ChocolateyGui.Rpc.Empty SetSetting(global::ChocolateyGui.Rpc.ChocolateySetting request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SetSetting(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::ChocolateyGui.Rpc.Empty SetSetting(global::ChocolateyGui.Rpc.ChocolateySetting request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetSetting, null, options, request);
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.Empty> SetSettingAsync(global::ChocolateyGui.Rpc.ChocolateySetting request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return SetSettingAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.Empty> SetSettingAsync(global::ChocolateyGui.Rpc.ChocolateySetting request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetSetting, null, options, request);
      }
      public virtual AsyncServerStreamingCall<global::ChocolateyGui.Rpc.ChocolateySource> GetSources(global::ChocolateyGui.Rpc.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return GetSources(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncServerStreamingCall<global::ChocolateyGui.Rpc.ChocolateySource> GetSources(global::ChocolateyGui.Rpc.Empty request, CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_GetSources, null, options, request);
      }
      public virtual global::ChocolateyGui.Rpc.Empty AddSource(global::ChocolateyGui.Rpc.ChocolateySource request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddSource(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::ChocolateyGui.Rpc.Empty AddSource(global::ChocolateyGui.Rpc.ChocolateySource request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddSource, null, options, request);
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.Empty> AddSourceAsync(global::ChocolateyGui.Rpc.ChocolateySource request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return AddSourceAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.Empty> AddSourceAsync(global::ChocolateyGui.Rpc.ChocolateySource request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddSource, null, options, request);
      }
      public virtual global::ChocolateyGui.Rpc.Empty UpdateSource(global::ChocolateyGui.Rpc.UpdateSourceArgs request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateSource(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::ChocolateyGui.Rpc.Empty UpdateSource(global::ChocolateyGui.Rpc.UpdateSourceArgs request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSource, null, options, request);
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.Empty> UpdateSourceAsync(global::ChocolateyGui.Rpc.UpdateSourceArgs request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return UpdateSourceAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.Empty> UpdateSourceAsync(global::ChocolateyGui.Rpc.UpdateSourceArgs request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSource, null, options, request);
      }
      public virtual global::ChocolateyGui.Rpc.PackageOperationResult RemoveSource(global::ChocolateyGui.Rpc.RemoveSourceArgs request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RemoveSource(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::ChocolateyGui.Rpc.PackageOperationResult RemoveSource(global::ChocolateyGui.Rpc.RemoveSourceArgs request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveSource, null, options, request);
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.PackageOperationResult> RemoveSourceAsync(global::ChocolateyGui.Rpc.RemoveSourceArgs request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return RemoveSourceAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.PackageOperationResult> RemoveSourceAsync(global::ChocolateyGui.Rpc.RemoveSourceArgs request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveSource, null, options, request);
      }
      public virtual global::ChocolateyGui.Rpc.Empty Exit(global::ChocolateyGui.Rpc.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return Exit(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::ChocolateyGui.Rpc.Empty Exit(global::ChocolateyGui.Rpc.Empty request, CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Exit, null, options, request);
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.Empty> ExitAsync(global::ChocolateyGui.Rpc.Empty request, Metadata headers = null, DateTime? deadline = null, CancellationToken cancellationToken = default(CancellationToken))
      {
        return ExitAsync(request, new CallOptions(headers, deadline, cancellationToken));
      }
      public virtual AsyncUnaryCall<global::ChocolateyGui.Rpc.Empty> ExitAsync(global::ChocolateyGui.Rpc.Empty request, CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Exit, null, options, request);
      }
      protected override PackageServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new PackageServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    public static ServerServiceDefinition BindService(PackageServiceBase serviceImpl)
    {
      return ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_IsElevated, serviceImpl.IsElevated)
          .AddMethod(__Method_GetInstalledPackages, serviceImpl.GetInstalledPackages)
          .AddMethod(__Method_GetOutdatedPackages, serviceImpl.GetOutdatedPackages)
          .AddMethod(__Method_Search, serviceImpl.Search)
          .AddMethod(__Method_GetByVersionAndId, serviceImpl.GetByVersionAndId)
          .AddMethod(__Method_InstallPackage, serviceImpl.InstallPackage)
          .AddMethod(__Method_UninstallPackage, serviceImpl.UninstallPackage)
          .AddMethod(__Method_UpdatePackage, serviceImpl.UpdatePackage)
          .AddMethod(__Method_PinPackage, serviceImpl.PinPackage)
          .AddMethod(__Method_UnpinPackage, serviceImpl.UnpinPackage)
          .AddMethod(__Method_GetFeatures, serviceImpl.GetFeatures)
          .AddMethod(__Method_SetFeature, serviceImpl.SetFeature)
          .AddMethod(__Method_GetSettings, serviceImpl.GetSettings)
          .AddMethod(__Method_SetSetting, serviceImpl.SetSetting)
          .AddMethod(__Method_GetSources, serviceImpl.GetSources)
          .AddMethod(__Method_AddSource, serviceImpl.AddSource)
          .AddMethod(__Method_UpdateSource, serviceImpl.UpdateSource)
          .AddMethod(__Method_RemoveSource, serviceImpl.RemoveSource)
          .AddMethod(__Method_Exit, serviceImpl.Exit).Build();
    }

  }
}
#endregion
